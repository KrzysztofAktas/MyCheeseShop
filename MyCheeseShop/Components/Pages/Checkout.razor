@page "/checkout"
@using Microsoft.AspNetCore.Authorization
@using Microsoft.AspNetCore.Components.Authorization
@using Microsoft.AspNetCore.Components.Server.ProtectedBrowserStorage
@using MyCheeseShop.Components.Account.Shared
@using MyCheeseShop.Context
@using MyCheeseShop.Model
@using System.ComponentModel.DataAnnotations
@attribute [Authorize]
@inject UserProvider UserProvider
@inject OrderProvider OrderProvider
@inject ShoppingCart ShoppingCart
@inject AuthenticationStateProvider AuthenticationStateProvider
@inject NavigationManager NavigationManager
@inject ProtectedSessionStorage ProtectedSessionStore

<PageTitle>Checkout - EasyBriezy</PageTitle>


<div class="row row-cols-1 row-cols-md-4 g-4" style="margin-bottom: 20px;">
    @foreach (var item in ShoppingCart.GetItems())
    {
        <div class="col">
            <div class="card h-100">
                <img src="/img/cheeses/@item.Cheese.ImageUrl" class="card-img-top p-1" alt="@item.Cheese.Name" onerror="this.onerror = null; this.src='/img/no_cheese.png'">
                <div class="card-body d-flex flex-column">
                    <div class="d-flex flex-column flex-sm-row justify-content-between">
                        <h5 class="card-title">@item.Cheese.Name</h5>
                        <br />
                    </div>
                    <h6><strong style=" margin: 20px;">Price:   </strong><span class="badge bg-danger">@item.Cheese.Price.ToString("C")</span></h6>
                    <h6><strong style=" margin: 20px;">Quantity:   </strong><span class="badge bg-success">@(item.Quantity * 100)g</span></h6>
                    <h6><strong style=" margin: 20px;">Total:   </strong><span class="badge bg-primary">@item.Total.ToString("C")</span></h6>
                    <div class="mt-auto"></div>
                </div>
            </div>
        </div>
    }
</div>






<div class="row" style="margin-bottom: 30px;">
    <div class="col-md-3">
        <div class="card" style="height : 20rem; justify-content:center;">
            <div class="card-header">
                <h4>Delivery Details</h4>
            </div>
            <ul class="list-group list-group-flush">
                <li class="list-group-item"><strong>Name: </strong> @user.FirstName @user.LastName</li>
                <li class="list-group-item"><strong>Address: </strong> @user.Address</li>
                <li class="list-group-item"><strong>City: </strong> @user.City</li>
                <li class="list-group-item"><strong>Postcode: </strong> @user.PostCode</li>
            </ul>
            <div class="card-footer">
                <strong>Estimated Delivery Time: </strong> 2-3 Days
            </div>
        </div>
    </div>

    <div class="col-md-9">
        <div class="card" style="height : 10rem;">
            <div class="card-body bg-light">
                <h4 class="card-title" style="text-align:center;">Payment Details --- Order Total: @(ShoppingCart.Total().ToString("C")) </h4>
                <EditForm OnValidSubmit="MakePayment" Model="paymentDetails" FormName="paymentdetails">
                    <div class="row g-3">
                        <div class="col-md-12">
                            <label for="name" class="form-label">Name On Card</label>
                            <InputText class="form-control" placeholder="Name On Card" @bind-Value="paymentDetails.NameOnCard" />
                        </div>
                        <div class="col-md-6">
                            <label for="cardnumber" class="form-label">Card Number</label>
                            <InputText type="cardnumber" class="form-control" placeholder="CardNumber" @bind-Value="paymentDetails.CardNumber" />
                        </div>
                        <div class="col-md-6">
                            <label for="expirydate" class="form-label">Expiry Date</label>
                            <InputText type="expirydate" class="form-control" placeholder="Expiry Date" @bind-Value="paymentDetails.ExpiryDate" />
                        </div>
                        <div class="col-md-6">
                            <label for="securitycode" class="form-label">Security Code</label>
                            <InputText type="securitycode" class="form-control" placeholder="Security Code" @bind-Value="paymentDetails.SecurityCode" />
                        </div>
                        <div class="col-md-3">
                            <button type="submit" class="btn btn-outline-primary w-100">🔑Make Payment</button>
                        </div>
                    </div>
                </EditForm>
            </div>
        </div>
    </div>
</div>


@code {

    private User user;
    private PaymentDetails paymentDetails;
    private EditContext editContext;
    private bool isPaying;

    protected override async Task OnInitializedAsync()
    {
        paymentDetails = new PaymentDetails();
        editContext = new EditContext(paymentDetails);

        var authState = await AuthenticationStateProvider.GetAuthenticationStateAsync();
        var username = authState!.User!.Identity!.Name!;
        user = UserProvider.GetUserByUsername(username)!;
    }

    private async Task MakePayment()
    {
        await SimulatePayment();

        await OrderProvider.CreateOrder(user, ShoppingCart.GetItems());
        ShoppingCart.Clear();
        NavigationManager.NavigateTo("/thank-you");
    }

    private async Task SimulatePayment()
    {
        isPaying = true;
        StateHasChanged();

        await Task.Delay(2000);

        isPaying = false;
        StateHasChanged();
    }

    private void GoToCart()
    {
        NavigationManager.NavigateTo("/cart");
    }

    private string GetFormattedName(User user)
    {
        return $"{user.FirstName} {user.LastName}";
    }

    private string GetFormattedAddress(User user)
    {
        return $"{user.Address}{Environment.NewLine}{user.City}{Environment.NewLine}{user.PostCode}";
    }

    private sealed class PaymentDetails
    {
        [Required]
        public string NameOnCard { get; set; }

        [Required]
        public string CardNumber { get; set; }

        [Required]
        public string ExpiryDate { get; set; }

        [Required]
        public string SecurityCode { get; set; }
    }
}